generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String   @unique
  password    String
  role        String   // 'admin', 'vendor', 'customer'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Vendor specific fields
  businessName String?
  businessDescription String?
  products    Product[] @relation("VendorProducts")
  
  // Customer orders
  orders     Order[]   @relation("CustomerOrders")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  images      String[]
  category    String
  stock       Int
  vendor      User     @relation(fields: [vendorId], references: [id], name: "VendorProducts")
  vendorId    String   @db.ObjectId
  orderItems  OrderItem[] @relation("ProductOrderItems")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  customer    User     @relation(fields: [customerId], references: [id], name: "CustomerOrders")
  customerId  String   @db.ObjectId
  products    OrderItem[] @relation("OrderItems")
  totalAmount Float
  status      String   // 'pending', 'processing', 'shipped', 'delivered'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrderItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  product     Product  @relation(fields: [productId], references: [id], name: "ProductOrderItems")
  productId   String   @db.ObjectId
  quantity    Int
  price       Float
  order       Order    @relation(fields: [orderId], references: [id], name: "OrderItems")
  orderId     String   @db.ObjectId
}













